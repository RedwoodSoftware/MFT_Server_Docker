{
	"info": {
		"_postman_id": "f6c36d3f-5d56-461b-b0cf-0c43e7b2bb3d",
		"name": "create-delete-trading-partner",
		"description": "This folder contains examples on how to login to REST Server API and create / delete a trading partner.\n\n**Create Trading Partner (Protocol - FTP)**\n\nSteps to acheive it\n\n1. Get CSRF token before login (API - Get CSRF token before login).\n2. Login into MFT server (API - Login request ).\n3. Get CSRF token after login (API - Get CSRF token after login).\n4. Create Trading Partner (API - Create trading partner ).\n5. Logout from MFT Server (API - Logout request ).\n    \n\n**Delete Trading Partner**\n\nSteps to acheive it\n\n1. Get CSRF token before login (API - Get CSRF token before login).\n2. Login into MFT server (API - Login request ).\n3. Get CSRF token after login (API - Get CSRF token after login).\n4. Delete Trading Partner (API - Delete trading partner ).\n5. Logout from MFT Server (API - Logout request ).",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6922053"
	},
	"item": [
		{
			"name": "create trading-partner",
			"item": [
				{
					"name": "API - Get CSRF token before login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"csrf-token\", \"\");",
									"var jsonData= responseBody;",
									"pm.collectionVariables.set(\"csrf-token\", jsonData);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{protocol}}://{{serverhost}}:{{servermanagementport}}/rest/management/csrf-token",
							"protocol": "{{protocol}}",
							"host": [
								"{{serverhost}}"
							],
							"port": "{{servermanagementport}}",
							"path": [
								"rest",
								"management",
								"csrf-token"
							]
						},
						"description": "API Request to get the CSRF token before login to the server.\n\nModify the collection variables as required, by default the below are the values configured.\n\n- serverhost (default - localhost)\n- servermanagementport (default-11880)\n- protocol (default - http)"
					},
					"response": []
				},
				{
					"name": "API - Login request",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if(pm.request.body && pm.request.body.raw) pm.request.body.raw = pm.request.body.raw.replace(/\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/g,'');"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						},
						"followRedirects": false
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text"
							},
							{
								"key": "x-js-at",
								"value": "{{csrf-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{serverhost}}:{{servermanagementport}}/rest/management/login",
							"protocol": "{{protocol}}",
							"host": [
								"{{serverhost}}"
							],
							"port": "{{servermanagementport}}",
							"path": [
								"rest",
								"management",
								"login"
							]
						},
						"description": "API Request to login into MFT Server.\n\nModify the server username and password on the json body.\n\nModify the collection variables as required, by default the below are the values configured.\n\n- serverhost (default - localhost)\n- servermanagementport (default-11880)\n- protocol (default - http)"
					},
					"response": []
				},
				{
					"name": "API - Get CSRF token after login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"csrf-token\", \"\");",
									"var jsonData= responseBody;",
									"pm.collectionVariables.set(\"csrf-token\", jsonData);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{protocol}}://{{serverhost}}:{{servermanagementport}}/rest/management/csrf-token",
							"protocol": "{{protocol}}",
							"host": [
								"{{serverhost}}"
							],
							"port": "{{servermanagementport}}",
							"path": [
								"rest",
								"management",
								"csrf-token"
							]
						},
						"description": "API Request to get the CSRF token after login to the server.\n\nModify the collection variables as required, by default the below are the values configured.\n\n- serverhost (default - localhost)\n- servermanagementport (default-11880)\n- protocol (default - http)"
					},
					"response": []
				},
				{
					"name": "API - Create trading partner",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if(pm.request.body && pm.request.body.raw) pm.request.body.raw = pm.request.body.raw.replace(/\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/g,'');"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text"
							},
							{
								"key": "x-js-at",
								"value": "{{csrf-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "/*\nModify the JSON request body parameters\nhost,port, username and password as required\n\nDo modify the name on the collection variable tradingPartnerName\n*/\n{\n  \"name\": \"{{tradingPartnerName}}\",\n  \"company\": null,\n  \"email\": \"\",\n  \"proxyData\": null,\n  \"protocol\": \"FTP\",\n  \"url\": \"\",\n  \"host\": \"127.0.0.1\",\n  \"port\": 21,\n  \"tcpNoDelayEnabled\": true,\n  \"connectionType\": null,\n  \"username\": \"a\",\n  \"password\" : \"a\",\n  \"domain\": null,\n  \"keyProvider\": null,\n  \"hostKeyProvider\": null,\n  \"encryptionRequired\": false,\n  \"aftpData\": null,\n  \"agentData\": null,\n  \"amazonS3Data\": null,\n  \"amazonAwsData\": null,\n  \"as2Data\": null,\n  \"ftpData\": {\n    \"postLoginCommand\": \"\",\n    \"passiveTransferModeRequired\": false,\n    \"epsvCommandAllowed\": false\n  },\n  \"imapData\": null,\n  \"oftpData\": null,\n  \"pop3Data\": null,\n  \"sftpData\": null,\n  \"smtpData\": null,\n  \"splunkHttpData\": null,\n  \"s3CompatibleData\": {\n    \"endPoint\": \"\",\n    \"region\": null\n  },\n  \"tags\": [],\n  \"creationDate\": {{$timestamp}},\n  \"version\": 1,\n  \"timeout\": 30000,\n  \"boxData\": null,\n  \"dropboxData\": null,\n  \"googleStorageData\": null,\n  \"googleCloudData\": null,\n  \"googleDriveData\": null,\n  \"ibmCloudData\": null,\n  \"microsoftAzureFileStorageData\": null,\n  \"microsoftAzureBlobStorageData\": null,\n  \"microsoftAzureDataLakeData\": null,\n  \"microsoftAzureDataLake2Data\": null,\n  \"microsoftOneDriveData\": null\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{serverhost}}:{{servermanagementport}}/rest/management/trading-partners/{{domainName}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{serverhost}}"
							],
							"port": "{{servermanagementport}}",
							"path": [
								"rest",
								"management",
								"trading-partners",
								"{{domainName}}"
							]
						},
						"description": "- API Request to add a trading partner (FTP)\n    \n\nModify the JSON request body parameters\n\n- host,port,username and password as required\n    \n\nModify the collection variables as required, by default the below are the values configured.\n\n- serverhost (default - localhost)\n- servermanagementport (default-11880)\n- protocol (default - http)\n- domainName (default - testdomain)\n- tradingPartnerName (default - test-ftp-partner)"
					},
					"response": []
				},
				{
					"name": "API - Logout request",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true,
							"accept-encoding": true,
							"connection": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text"
							},
							{
								"key": "x-js-at",
								"value": "{{csrf-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{serverhost}}:{{servermanagementport}}/rest/management/logout",
							"protocol": "{{protocol}}",
							"host": [
								"{{serverhost}}"
							],
							"port": "{{servermanagementport}}",
							"path": [
								"rest",
								"management",
								"logout"
							]
						},
						"description": "API Request to logout from MFT Server\n\nModify the collection variables as required, by default the below are the values configured.\n\n- serverhost (default - localhost)\n- servermanagementport (default-11880)\n- protocol (default - http)"
					},
					"response": []
				}
			],
			"description": "This folder contains examples on how to login to REST Server API and create a FTP trading partner.\n\n**Create Trading Partner (Protocol - FTP)**\n\nSteps to acheive it\n\n- Get CSRF token before login (API - Get CSRF token before login).\n- Login into MFT server (API - Login request ).\n- Get CSRF token after login (API - Get CSRF token after login).\n- Create Trading Partner (API - Create trading partner ).\n- Logout from MFT Server (API - Logout request )."
		},
		{
			"name": "delete trading-partner",
			"item": [
				{
					"name": "API - Get CSRF token before login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"csrf-token\", \"\");",
									"var jsonData= responseBody;",
									"pm.collectionVariables.set(\"csrf-token\", jsonData);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{protocol}}://{{serverhost}}:{{servermanagementport}}/rest/management/csrf-token",
							"protocol": "{{protocol}}",
							"host": [
								"{{serverhost}}"
							],
							"port": "{{servermanagementport}}",
							"path": [
								"rest",
								"management",
								"csrf-token"
							]
						},
						"description": "API Request to get the CSRF token before login to the server.\n\nModify the collection variables as required, by default the below are the values configured.\n\n- serverhost (default - localhost)\n- servermanagementport (default-11880)\n- protocol (default - http)"
					},
					"response": []
				},
				{
					"name": "API - Login request",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"if(pm.request.body && pm.request.body.raw) pm.request.body.raw = pm.request.body.raw.replace(/\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/g,'');"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						},
						"followRedirects": false
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text"
							},
							{
								"key": "x-js-at",
								"value": "{{csrf-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{serverhost}}:{{servermanagementport}}/rest/management/login",
							"protocol": "{{protocol}}",
							"host": [
								"{{serverhost}}"
							],
							"port": "{{servermanagementport}}",
							"path": [
								"rest",
								"management",
								"login"
							]
						},
						"description": "API Request to login into MFT Server.\n\nModify the server username and password on the json body.\n\nModify the collection variables as required, by default the below are the values configured.\n\n- serverhost (default - localhost)\n- servermanagementport (default-11880)\n- protocol (default - http)"
					},
					"response": []
				},
				{
					"name": "API - Get CSRF token after login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"csrf-token\", \"\");",
									"var jsonData= responseBody;",
									"pm.collectionVariables.set(\"csrf-token\", jsonData);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{protocol}}://{{serverhost}}:{{servermanagementport}}/rest/management/csrf-token",
							"protocol": "{{protocol}}",
							"host": [
								"{{serverhost}}"
							],
							"port": "{{servermanagementport}}",
							"path": [
								"rest",
								"management",
								"csrf-token"
							]
						},
						"description": "API Request to get the CSRF token after login to the server.\n\nModify the collection variables as required, by default the below are the values configured.\n\n- serverhost (default - localhost)\n- servermanagementport (default-11880)\n- protocol (default - http)"
					},
					"response": []
				},
				{
					"name": "API - Delete trading partner",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text"
							},
							{
								"key": "x-js-at",
								"value": "{{csrf-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{serverhost}}:{{servermanagementport}}/rest/management/trading-partners/{{domainName}}/{{tradingPartnerName}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{serverhost}}"
							],
							"port": "{{servermanagementport}}",
							"path": [
								"rest",
								"management",
								"trading-partners",
								"{{domainName}}",
								"{{tradingPartnerName}}"
							]
						},
						"description": "- API Request to delete the trading partner\n    \n\nModify the collection variables as required, by default the below are the values configured.\n\n- domainName (default - testdomain)\n- serverhost (default - localhost)\n- servermanagementport (default-11880)\n- protocol (default - http)\n- tradingPartnerName (default - test-ftp-partner)"
					},
					"response": []
				},
				{
					"name": "API - Logout request",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true,
							"connection": true,
							"accept-encoding": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Requested-With",
								"value": "XMLHttpRequest",
								"type": "text"
							},
							{
								"key": "x-js-at",
								"value": "{{csrf-token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{serverhost}}:{{servermanagementport}}/rest/management/logout",
							"protocol": "{{protocol}}",
							"host": [
								"{{serverhost}}"
							],
							"port": "{{servermanagementport}}",
							"path": [
								"rest",
								"management",
								"logout"
							]
						},
						"description": "API Request to logout from MFT Server\n\nModify the collection variables as required, by default the below are the values configured.\n\n- serverhost (default - localhost)\n- servermanagementport (default-11880)\n- protocol (default - http)"
					},
					"response": []
				}
			],
			"description": "This folder contains examples on how to login to REST Server API and delete a trading partner.\n\n**Delete Trading Partner**\n\nSteps to acheive it\n\n- Get CSRF token before login (API - Get CSRF token before login).\n- Login into MFT server (API - Login request ).\n- Get CSRF token after login (API - Get CSRF token after login).\n- Delete Trading Partner (API - Delete trading partner ).\n- Logout from MFT Server (API - Logout request )."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "serverhost",
			"value": "localhost",
			"type": "string"
		},
		{
			"key": "servermanagementport",
			"value": "11880",
			"type": "string"
		},
		{
			"key": "protocol",
			"value": "http",
			"type": "string"
		},
		{
			"key": "csrf-token",
			"value": ""
		},
		{
			"key": "domainName",
			"value": "testdomain",
			"type": "string"
		},
		{
			"key": "tradingPartnerName",
			"value": "test-ftp-partner",
			"type": "string"
		}
	]
}