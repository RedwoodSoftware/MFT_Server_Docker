/* Copyright Â© 2009-2024. Redwood Software Inc. All rights reserved. */
$.fn.queryBuilder.defaults({allow_empty:true,display_errors:false,display_empty_filter:true,icons:{add_group:"icon icon-add",add_rule:"icon icon-add",remove_group:"icon icon-remove",remove_rule:"icon icon-remove",error:"icon icon-warning"},triggerOperators:{equal:{op:"=",sep:" "},not_equal:{op:"!=",sep:" "},less:{op:"<",sep:" "},less_or_equal:{op:"<=",sep:" "},greater:{op:">",sep:" "},greater_or_equal:{op:">=",sep:" "},contains:{op:"#",sep:" "},not_contains:{op:"!#",sep:" "},matches:{op:"~",sep:" "},not_matches:{op:"!~",sep:" "},is_empty:{op:'= ""'},is_not_empty:{op:'!= ""'}},triggerRuleOperator:{'=':function(v){return{val:v,op:v===""?"is_empty":"equal"};},'!=':function(v){return{val:v,op:v===""?"is_not_empty":"not_equal"};},'<':function(v){return{val:v,op:"less"};},'<=':function(v){return{val:v,op:"less_or_equal"};},'>':function(v){return{val:v,op:"greater"};},'>=':function(v){return{val:v,op:"greater_or_equal"};},'#':function(v){return{val:v,op:"contains"};},'!#':function(v){return{val:v,op:"not_contains"};},'~':function(v){return{val:v,op:"matches"};},'!~':function(v){return{val:v,op:"not_matches"};}}});$.extend($.fn.queryBuilder.constructor.OPERATORS,{contains:{type:"contains",nb_inputs:1,multiple:false,apply_to:["string","number"],optgroup:"text"},not_contains:{type:"not_contains",nb_inputs:1,multiple:false,apply_to:["string","number"],optgroup:"text"},matches:{type:"matches",nb_inputs:1,multiple:false,apply_to:["string","number"],optgroup:"pattern"},not_matches:{type:"not_matches",nb_inputs:1,multiple:false,apply_to:["string","number"],optgroup:"pattern"}});$.fn.queryBuilder.defaults({operators:["matches","not_matches"].concat($.fn.queryBuilder.constructor.DEFAULTS.operators)});$.extend(true,$.fn.queryBuilder.regional,{en:{operators:{matches:"matches",not_matches:"doesn't match"}}});$.fn.queryBuilder.extend({isEnabled:function(){return!this.status.disabled;},enable:function(){this.status.disabled=false;this.$el.css("position","").children("div.datagrid-mask").remove();},disable:function(){this.status.disabled=true;if(!this.$el.children("div.datagrid-mask").length){this.$el.css("position","relative");$('<div class="datagrid-mask"></div>').prependTo(this.$el).css({display:"block",zIndex:$.fn.window.defaults.zIndex++});}},getTriggerExpression:function(data){data=(data===undefined&&this.model.root)?this.getRules({allow_invalid:true,skip_empty:true}):data;if(!data){return"";}
var self=this;return(function _parse(group){if(!group.condition){group.condition=self.settings.default_condition;}
if(["AND","OR"].indexOf(group.condition.toUpperCase())===-1){throw"Unable to build expression with condition: "+group.condition;}
if(!group.rules){return"";}
var parts=[];group.rules.forEach(function(rule){if(rule.rules&&rule.rules.length>0){parts.push("("+_parse(rule)+")");}else{var value="";var expression=self.settings.triggerOperators[rule.operator];if(expression!==undefined){if(self.getOperatorByType(rule.operator).nb_inputs!==0){if(!(rule.value instanceof Array)){rule.value=[rule.value];}
rule.value.forEach(function(val,i){if(i>0){value+=expression.sep||"";}
if(rule.type=="boolean"){val=!!val?"TRUE":"FALSE";}else if(rule.type=="integer"){var operator=self.getOperatorByType(rule.operator);var text=operator&&("pattern"==operator.optgroup||"text"==operator.optgroup);val=text?'"'+(val||"")+'"':parseInt(val)||0;}else if(rule.type=="string"){val='"'+(val||"")+'"';}
value+=val;});}}else{expression={op:""};}
var field=self.change("getTriggerExpressionField",rule.field,rule);if(field){var ruleExpression=field+" "+expression.op+" "+value;parts.push(self.change("ruleTriggerExpression",ruleExpression,rule,value));}}});var groupExpression=parts.join(" "+group.condition+" ");return self.change("groupToTriggerExpression",groupExpression,group);}(data));},setTriggerExpression:function(expression,options){this.setRules(this.getRulesFromTriggerExpression(expression),options);},getRulesFromTriggerExpression:function(expression){if(expression===undefined||expression==null){return null;}
expression=this.change("parseTriggerExpression",expression);if("rules"in expression&&"condition"in expression){return expression;}
if("id"in expression&&"operator"in expression&&"value"in expression){return{condition:this.settings.default_condition,rules:[expression]};}
var self=this;var root={condition:this.settings.default_condition,rules:[]};var current=root;(function _flatten(data,level){var le=data.leftExpression;var re=data.rightExpression;var op=data.operator.toUpperCase();if(/^(AND|OR)$/.test(op)){if(level>0&&current.condition!=op){var group={condition:op,rules:[]};current.rules.push(group);current=group;}else{current.condition=op;}
level++;var tmp=current;_flatten(le,level);current=tmp;_flatten(re,level);}else{if("variableName"in le){var field=le.variableName;var fn=self.settings.triggerRuleOperator[data.operator];var ruleOperator=fn.call(self,re.value);current.rules.push({id:self.getFilterIdByField(field),field:field,operator:ruleOperator.op,value:ruleOperator.val});}}})(expression,0);return root;},getFilterIdByField:function(field,defaultValue){for(var i=0,len=this.filters.length;i<len;++i){var filter=this.filters[i];if(filter.field==field){return filter.id;}}
return defaultValue;},updateDisabledFilters:function(e){var self=e?e.builder:this;self.status.used_filters={};if(!self.model){return;}
(function walk(group){group.each(function(rule){if(rule.filter&&rule.filter.unique){if(!self.status.used_filters[rule.filter.id]){self.status.used_filters[rule.filter.id]=[];}
if(rule.filter.unique=='group'){self.status.used_filters[rule.filter.id].push(rule.parent);}}},function(group){walk(group);});}(self.model.root));self.applyDisabledFilters(e);}});$.fn.queryBuilder.define("easyui",function(options){if(!$.fn.combobox||!$.fn.combobox.methods){throw"Missing JEasyUI library";}
var self=this;var selectors=$.fn.queryBuilder.constructor.selectors;this.on("afterCreateRuleFilters",function(e,rule){var $filter=rule.$el.find(selectors.rule_filter);$filter.removeClass("form-control").combobox($.extend({editable:true,selectOnNavigation:false,value:self.settings.display_empty_filter?"":undefined,loadFilter:function(data){var textField=$(this).combobox("options").textField;return self.settings.display_empty_filter?$.grep(data,function(row){return row[textField]!=self.settings.select_placeholder;}):data;},onLoadSuccess:function(data){var opts=$(this).combobox("options");var rows=data.rows?data.rows:data;for(var i=0,len=rows.length;i<len;++i){var value=rows[i][opts.valueField];var filter=self.getFilterById(value);if(filter&&filter.description){var el=opts.finder.getEl(this,value);el.off(".tip").on("mouseenter.tip",{description:filter.description},function(e){$(this).tooltip({content:e.data.description,position:"right",deltaX:function(){return $(this).parent()._outerWidth()-$(this)._outerWidth();},showEvent:"none",hideEvent:"none",showDelay:0,hideDelay:0,onUpdate:function(){$(this).tooltip("tip").addClass("tooltip-tip-black");},onHide:function(){$(this).tooltip("destroy");}}).tooltip("show");}).on("mouseleave.tip",function(){$(this).tooltip("hide");});}}},onChange:function(value){var model=self.getModel($(this).closest(selectors.rule_container));try{model.filter=value!==""?self.getFilterById(value):null;}catch(e){model.filter=null;if(!$(this).combobox("options").editable){throw e;}}}},options.combobox));}).on("afterUpdateRuleFilter",function(e,rule){var $filter=rule.$el.find("[comboname="+rule.$el.find(selectors.rule_filter).attr("name")+"]");if(rule.filter&&$filter.length){$filter.combobox("initValue",rule.filter.id).combobox("setText",self.translate(rule.filter.label));}});this.on("afterCreateRuleOperators",function(e,rule){var $operator=rule.$el.find(selectors.rule_operator);if($operator.hasClass("hide")){$operator.hide();}else{$operator.removeClass("form-control").combobox($.extend({editable:false,value:rule.operator?rule.operator.type:undefined,onChange:function(value){var $rule=$(this).closest(selectors.rule_container);self.getModel($rule).operator=self.getOperatorByType(value);}},options.combobox));}}).on("afterUpdateRuleOperator",function(e,rule){var $operator=rule.$el.find("[comboname="+rule.$el.find(selectors.rule_operator).attr("name")+"]");if(rule.operator&&$operator.length){$operator.combobox("initValue",rule.operator.type).combobox("setText",self.translate("operators",rule.operator.type));}});this.on("getRuleInput.filter",function(e,rule){if(rule.filter.input==="number"){e.value=e.value.replace(/type=["']number["']/i,"type=\"text\"");}});this.on("afterCreateRuleInput",function(e,rule){function _model(target){return self.getModel(target.closest(selectors.rule_container));}
var $value=rule.$el.find(selectors.rule_value).removeClass("form-control");var filter=rule.filter;switch(filter.input){case"radio":case"checkbox":break;case"select":$value.combobox($.extend({multiple:filter.multiple,prompt:!!filter.placeholder?filter.placeholder_value||filter.placeholder:"",value:rule.value,loader:filter.loader||undefined,onChange:function(value){_model($(this)).value=value;}},options.combobox,filter.options||{}));filter.valueGetter=function(rule){var $select=rule.$el.find(selectors.value_container).find("select");return $select.length&&$.data($select[0],"combobox")?$select.combobox("getValue"):undefined;};break;case"number":var group=rule.operator.optgroup;if("pattern"==group||"text"==group){$value.textbox($.extend({value:rule.value,onChange:function(value){_model($(this)).value=value;}},options.textbox));}else{$value.numberspinner($.extend({value:rule.value,onChange:function(value){_model($(this)).value=value;}},options.numberspinner));}
break;case"textarea":$value.textbox($.extend({multiline:true,value:rule.value,onChange:function(value){_model($(this)).value=value;}},options.textbox));break;default:$value.textbox($.extend({value:rule.value,onChange:function(value){_model($(this)).value=value;}},options.textbox));}});this.on("afterUpdateRuleValue",function(e,rule){var value=rule.value;var name=rule.$el.find(selectors.rule_value).attr("name");if(value==undefined||!name){return;}
var $value;switch(rule.filter.input){case"radio":case"checkbox":break;case"select":$value=rule.$el.find("[comboname="+name+"]");$value.length&&$value.combobox("initValue",value);break;case"number":var group=rule.operator.optgroup;if("pattern"==group||"text"==group){$value=rule.$el.find("[textboxname="+name+"]");$value.length&&$value.textbox("initValue",value);}else{$value=rule.$el.find("[spinnername="+name+"]");$value.length&&$value.numberspinner("initValue",value);}
break;default:$value=rule.$el.find("[textboxname="+name+"]");$value.length&&$value.textbox("initValue",value);}});this.on("afterAddGroup",function(e,group){var $buttons=group.$el.find(selectors.group_actions).removeClass("pull-right").css("float","right");var addRuleBtn=$buttons.find(selectors.add_rule);addRuleBtn.removeClass("btn-success").html(addRuleBtn.text()).linkbutton({iconCls:self.icons.add_rule});var addGroupBtn=$buttons.find(selectors.add_group);addGroupBtn.length&&addGroupBtn.removeClass("btn-success").html(addGroupBtn.text()).linkbutton({iconCls:self.icons.add_group});var deleteGroupBtn=$buttons.find(selectors.delete_group);deleteGroupBtn.length&&deleteGroupBtn.removeClass("btn-danger").html(deleteGroupBtn.text()).linkbutton({iconCls:self.icons.remove_group});var groupCondition=$('<input class="group-condition"/>').appendTo(group.$el.find(selectors.condition_container).empty());groupCondition.switchbutton({width:100,onText:"AND",offText:"OR",checked:true,onChange:function(checked){var opts=$(this).switchbutton("options");if(!opts.__changing){var group=self.getModel($(this).closest(selectors.group_container));opts.__changing=true;group.condition=checked?opts.onText:opts.offText;opts.__changing=false;}}});});this.on("afterUpdateGroupCondition",function(e,group){var $condition=group.$el.find(".group-condition");if($condition.length){var opts=$condition.switchbutton("options");if(!opts.__changing){$condition.switchbutton(group.condition!=opts.onText?"uncheck":"check");}}});this.on("afterAddRule",function(e,rule){var $buttons=rule.$el.find(selectors.rule_actions).removeClass("pull-right").css("float","right");var $deleteBtn=$buttons.find(selectors.delete_rule).removeClass("btn-danger");$deleteBtn.html($deleteBtn.text()).linkbutton({iconCls:self.icons.remove_rule});});},{combobox:{limitToList:true,width:"auto",minWidth:150,panelWidth:"auto",panelMinWidth:200,panelHeight:"auto",panelMinHeight:50,panelMaxHeight:"50%"},textbox:{},numberspinner:{}});