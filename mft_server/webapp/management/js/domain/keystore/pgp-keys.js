/* Copyright Â© 2009-2024. Redwood Software Inc. All rights reserved. */
jscape.domain=jscape.domain||{};jscape.domain.PgpKeysModule=jscape.domain.DomainModule.extend({initialize:function(kca){this.kca=kca;},onCreate:function(){this._super.apply(this,arguments);this.controller=new jscape.domain.PgpKeysController(this.kca);},onStart:function(){this._super.apply(this,arguments);this.controller.start(this.domainName);},onResume:function(){this._super.apply(this,arguments);this.controller.resume();}});jscape.domain.PgpKeysController=jscape.ui.DatagridController.extend({initialize:function(kca){this.importController=new jscape.domain.ImportPgpKeyController(kca);this.importJsonController=new jscape.domain.ImportPgpKeysBatchController(kca);this.exportPublicKeyController=new jscape.domain.ExportPgpPublicKeyController();this.exportSecretKeyController=new jscape.domain.ExportPgpSecretKeyController();this.generateController=new jscape.domain.GeneratePgpKeyController(kca);this.signController=new jscape.domain.SignPgpKeyController(kca);this.viewController=new jscape.domain.ViewPgpKeySignaturesController();this.deleteController=new jscape.domain.DeletePgpKeyController(kca);this._initValidators();},start:function(domainName){this.domainName=domainName;if(this.view==null){this.view=new jscape.domain.PgpKeysView();}
this.view.show(this);},resume:function(){this.view.refresh();},onLoadData:function(params){params=jscape.Page.requestParameters(params);return $.when(jscape.API.listPgpPublicKeys(this.domainName,params.startIndex,params.count,params.query),jscape.API.listPgpSecretKeys(this.domainName,params.startIndex,params.count,params.query)).then(function(publicKeys,secretKeys){return{total:publicKeys.totalRecords+secretKeys.totalRecords,rows:[].concat(publicKeys.records,secretKeys.records),publicKeys:publicKeys.records,secretKeys:secretKeys.records};});},onImportKey:function(){return this.importController.start(this.domainName).done($.proxy(function(key,isSecretKey){if(isSecretKey){this._secretKeyImported(key);}else{this._publicKeyImported(key);}},this));},onImportJson:function(){return this.importJsonController.start(this.domainName).done($.proxy(function(){this.view.refresh();},this));},onGenerate:function(){return this.generateController.start(this.domainName).done($.proxy(this._keyGenerated,this));},onExportPublicKey:function(key){return this.exportPublicKeyController.start(this.domainName,key.name,false);},onExportSecretKey:function(key){return this.exportSecretKeyController.start(this.domainName,key.name);},onExportSecretPublicKey:function(key){return this.exportPublicKeyController.start(this.domainName,key.name,true);},onDeletePublicKey:function(key){return this.deleteController.start(this.domainName,key.name,false).done($.proxy(this._publicKeyDeleted,this,key));},onDeleteSecretKey:function(key){return this.deleteController.start(this.domainName,key.name,true).done($.proxy(this._secretKeyDeleted,this,key));},onSign:function(key){return this.signController.start(this.domainName,key.name,this.view.getSecretKeys());},onViewPublicKeySignatures:function(key){return this.viewController.start(this.domainName,key.name,false);},onViewSecretKeySignatures:function(key){return this.viewController.start(this.domainName,key.name,true);},_publicKeyImported:function(key){this.view.getPublicKeys().push(key);this._recordAdded(key);},_secretKeyImported:function(key){this.view.getSecretKeys().push(key);this._recordAdded(key);},_keyGenerated:function(key){this.view.getSecretKeys().push(key);this._recordAdded(key);},_publicKeyDeleted:function(key){var items=this.view.getPublicKeys();var index=$.inArray(key,items);if(index!=-1){items.splice(index,1);this._recordDeleted(key);}},_secretKeyDeleted:function(key){var items=this.view.getSecretKeys();var index=$.inArray(key,items);if(index!=-1){items.splice(index,1);this._recordDeleted(key);}},_initValidators:function(){var v=new jscape.Validator();v.nonEmptyRule("pgp_nonempty_name",window.R.string.KEY_MANAGER_PGP_KEYS_ERROR_BAD_NAME);},_keyAliasNotExists:function(_,params){var realName=$(params[0]).val();var email=$(params[1]).val();var alias=email.trim().length!=0?"{0} <{1}>".supplant({0:realName,1:email}):realName;var aliases=$.map([].concat(this.view.getPublicKeys(),this.view.getSecretKeys()),function(key){return key.name;});return $.inArray(alias,aliases)==-1;}});jscape.domain.PgpKeysView=jscape.ui.DatagridView.extend({DATE_FORMAT:new jscape.DateFormat("{MM}-{dd}-{yy}"),selection:null,initialize:function(){var initializing=true;this.fieldset=$("#domain-pgp-keys-fields").layout({fit:true,doSize:false,border:false});this.data=$("table[role=grid][aria-label=pgpkeys]",this.fieldset);this.data.datagrid({fit:true,singleSelect:true,pagination:true,search:true,remoteSearch:true,remoteSort:true,idField:"name",sortName:"name",columns:[[{field:"name",title:$("thead th:nth-child(1)",this.data).text(),sortable:true,width:"15%"},{field:"keyAlgorithm",title:$("thead th:nth-child(2)",this.data).text(),sortable:true,finder:{type:"combobox",options:{panelHeight:"auto",data:$.map(jscape.KeyPairAlgorithm.values(),$.proxy(function(entry){return entry.name;},this))}},width:"10%"},{field:"expirationDate",title:$("thead th:nth-child(3)",this.data).text(),sortable:true,finder:"datebox",formatter:$.proxy(this._formatExpirationDate,this),width:"10%",align:"right"},{field:"encryptionAllowed",title:$("thead th:nth-child(4)",this.data).text(),sortable:true,searchable:false,formatter:$.proxy(this._formatBoolean,this),styler:$.proxy(this._styleBoolean,this),width:"10%"},{field:"decryptionAllowed",title:$("thead th:nth-child(5)",this.data).text(),sortable:true,searchable:false,formatter:$.proxy(this._formatBoolean,this),styler:$.proxy(this._styleBoolean,this),width:"10%"},{field:"signingAllowed",title:$("thead th:nth-child(6)",this.data).text(),sortable:true,searchable:false,formatter:$.proxy(this._formatBoolean,this),styler:$.proxy(this._styleBoolean,this),width:"10%"},{field:"signatureVerificationAllowed",title:$("thead th:nth-child(7)",this.data).text(),sortable:true,searchable:false,formatter:$.proxy(this._formatBoolean,this),styler:$.proxy(this._styleBoolean,this),width:"10%"},{field:"fingerprint",title:$("thead th:nth-child(8)",this.data).text(),sortable:false,width:"20%"}]],onSelect:$.proxy(this._adjustRowSelection,this),onUnselect:$.proxy(this._adjustRowSelection,this),onUnselectAll:$.proxy(this._adjustRowSelection,this),onDblClickRow:$.proxy(this._onClick$SignaturesButton,this),onRowContextMenu:$.proxy(this._onRow$ContextMenu,this),loader:$.proxy(this._onLoad$Data,this),onBeforeLoad:function(){return!initializing;},onLoadSuccess:$.proxy(this._adjustRowSelection,this)});this.importButton=$("a[role=button][name=import]",this.fieldset).linkbutton({onClick:$.proxy(this._onClick$ImportButton,this)});this.importMenu=$("div[role=menu][aria-label=import-menu]",this.fieldset).menu({onClick:$.proxy(this._onClick$ImportMenu,this)});this.exportButton=$("a[role=button][name=export]",this.fieldset).linkbutton({disabled:true,onClick:$.proxy(this._onClick$ExportButton,this)});this.exportMenu=$("div[role=menu][aria-label=export-menu]",this.fieldset).menu({onClick:$.proxy(this._onClick$ExportMenu,this)});this.signButton=$("a[role=button][name=sign]",this.fieldset).linkbutton({disabled:true,onClick:$.proxy(this._onClick$SignButton,this)});this.signaturesButton=$("a[role=button][name=signatures]",this.fieldset).linkbutton({disabled:true,onClick:$.proxy(this._onClick$SignaturesButton,this)});this.generateButton=$("a[role=button][name=generate]",this.fieldset).linkbutton({onClick:$.proxy(this._onClick$GenerateButton,this)});this.deleteButton=$("a[role=button][name=delete]",this.fieldset).linkbutton({disabled:true,onClick:$.proxy(this._onClick$DeleteButton,this)});initializing=false;},show:function(listener){this.listener=listener||jscape.domain.PgpKeysView.LISTENER;this._adjustRowSelection();},getSecretKeys:function(){return this.data.datagrid("getData").secretKeys;},getPublicKeys:function(){return this.data.datagrid("getData").publicKeys;},_formatBoolean:function(value){return!!value?"yes":"no"},_styleBoolean:function(value){return!!value?"color:green":"color:red";},_formatExpirationDate:function(value){return value&&!isNaN(value)?this.DATE_FORMAT.format(new Date(value)):value==null?window.R.string.KEY_MANAGER_PGP_KEYS_DATE_NON_EXPIRING:"";},_onLoad$Data:function(params,success,error){this.data.datagrid("unselectAll");this.listener.onLoadData(params).then(success,error);},_onClick$GenerateButton:function(){this.listener.onGenerate();},_onClick$ImportButton:function(){this.importMenu.menu("show",{alignTo:this.importButton});this.importButton.blur();},_onClick$ImportMenu:function(item){if("menu-key"==item.id){this.listener.onImportKey();}else if("menu-json"==item.id){this.listener.onImportJson();}},_onClick$ExportButton:function(){var value=this.selection;if(this._isPublicKey(value)){this.listener.onExportPublicKey(value);}else if(this._isSecretKey(value)){this.exportMenu.menu("show",{alignTo:this.exportButton});this.exportButton.blur();}},_onClick$ExportMenu:function(item){if("menu-secret"==item.id){this.listener.onExportSecretKey(this.selection);}else if("menu-pubkey"==item.id){this.listener.onExportSecretPublicKey(this.selection);}},_onClick$SignButton:function(){this.listener.onSign(this.selection);},_onClick$DeleteButton:function(){var value=this.selection;if(this._isPublicKey(value)){this.listener.onDeletePublicKey(value);}else if(this._isSecretKey(value)){this.listener.onDeleteSecretKey(value);}},_onClick$SignaturesButton:function(){var value=this.selection;if(this._isPublicKey(value)){this.listener.onViewPublicKeySignatures(value);}else if(this._isSecretKey(value)){this.listener.onViewSecretKeySignatures(value);}},_showContextMenu:function(e){this._super(e,[this.signaturesButton,this.deleteButton,"-",this.signButton,"-",this.generateButton,{button:this.importButton,submenu:this.importMenu},{button:this.exportButton,submenu:this.exportMenu}]);},_adjustRowSelection:function(){this.selection=this.data.datagrid("getSelected");this._adjustButtonsState();},_adjustButtonsState:function(){var signingAllowed=this._isPublicKey(this.selection)&&this.getSecretKeys().length!=0;this.exportButton.linkbutton(this.selection!=null?"enable":"disable");this.deleteButton.linkbutton(this.selection!=null?"enable":"disable");this.signButton.linkbutton(signingAllowed?"enable":"disable");this.signaturesButton.linkbutton(this.selection!=null?"enable":"disable");},_isSecretKey:function(value){return $.inArray(value,this.getSecretKeys())!=-1;},_isPublicKey:function(value){return $.inArray(value,this.getPublicKeys())!=-1;}});jscape.domain.PgpKeysView.LISTENER={onLoadData:$.noop,onImport:$.noop,onGenerate:$.noop,onExportPublicKey:$.noop,onExportSecretKey:$.noop,onExportSecretPublicKey:$.noop,onDeletePublicKey:$.noop,onDeleteSecretKey:$.noop,onSign:$.noop,onViewPublicKeySignatures:$.noop,onViewSecretKeySignatures:$.noop};jscape.domain.ImportPgpKeyController=Class.extend({deferred:null,initialize:function(allowed){this.allowed=!!allowed;},start:function(domainName){this.deferred=$.Deferred();if(!this.allowed){this.deferred.reject();}else{this.domainName=domainName;this._setupDialog().show(this);}
return this.deferred.promise();},onSubmit:function(dialog){if(dialog.isSecretKey()){return jscape.API.importPgpSecretKey(this.domainName,dialog.getFileSource(),dialog.getFilePassword()).done($.proxy(function(key){this.deferred.resolve(key,true);this.deferred=null;},this));}else if(dialog.isPublicKey()){return jscape.API.importPgpPublicKey(this.domainName,dialog.getFileSource(),dialog.getFilePassword()).done($.proxy(function(key){this.deferred.resolve(key,false);this.deferred=null;},this));}
return $.Deferred().resolve().promise();},onCancel:function(dialog){dialog.destroy();this.deferred.reject();this.deferred=null;},_setupDialog:function(){return new jscape.domain.ImportPgpKeyDialog();}});jscape.domain.ImportPgpKeyDialog=jscape.ui.DefaultDialog.extend({initialize:function(){this._super($("#d-pgpkey-import"),{width:"50%",minWidth:500,maxWidth:750});this.fieldset=$("fieldset[name=importpgpkeyfields]",this.dialog);this.type=$("input[name=type]:radio",this.fieldset).change($.proxy(this._adjustFieldState,this));this.file=$("input[name=filesource]",this.fieldset).filebox({required:true,multiple:false,missingMessage:window.R.string.KEY_MANAGER_PGP_KEYS_ERROR_BAD_FILE,width:"60%"});this.password=$("input[name=filepwd]",this.fieldset).passwordbox2({required:true,missingMessage:window.R.string.KEY_MANAGER_PGP_KEYS_ERROR_BAD_FILE_PASSWORD,width:"60%"});},isPublicKey:function(){return this.type.filter("[value=public]").is(":checked");},isSecretKey:function(){return this.type.filter("[value=secret]").is(":checked");},getFileSource:function(){var files=this.file.filebox("files");return files&&files.length?files[0]:null;},getFilePassword:function(){return this.password.passwordbox2("getValue");},show:function(listener){this._super(listener);this.type.filter(":first").prop("checked",true).change().focus();},_adjustFieldState:function(){this.password.passwordbox2(this.isSecretKey()?"enable":"disable").passwordbox2("validate");}});jscape.domain.ImportPgpKeysBatchController=Class.extend({deferred:null,initialize:function(allowed){this.allowed=!!allowed;},start:function(domainName){this.deferred=$.Deferred();if(!this.allowed){this.deferred.reject();}else{this.domainName=domainName;this._setupDialog().show(this);}
return this.deferred.promise();},onSubmit:function(dialog){if(dialog.isSecretKey()){return jscape.API.importPgpSecretKeysBatch(this.domainName,dialog.getFile(),dialog.isOverwrite()).done($.proxy(function(){this.deferred.resolve();this.deferred=null;},this));}else if(dialog.isPublicKey()){return jscape.API.importPgpPublicKeysBatch(this.domainName,dialog.getFile(),dialog.isOverwrite()).done($.proxy(function(){this.deferred.resolve();this.deferred=null;},this));}
return $.Deferred().resolve().promise();},onCancel:function(dialog){dialog.destroy();this.deferred.reject();this.deferred=null;},_setupDialog:function(){return new jscape.domain.ImportPgpKeysBatchDialog();}});jscape.domain.ImportPgpKeysBatchDialog=jscape.ui.DefaultDialog.extend({initialize:function(){this._super($("#d-pgpkey-importjson"),{width:"50%",minWidth:500,maxWidth:750});this.fieldset=$("fieldset[name=importpgpkeyjsonfields]",this.dialog);this.type=$("input[name=type]:radio",this.fieldset);this.file=$("input[name=file]",this.fieldset).filebox({required:true,multiple:false,missingMessage:window.R.string.KEY_MANAGER_PGP_KEYS_ERROR_BAD_FILE,width:"60%"});this.overwrite=$("input[name=overwrite]:checkbox",this.fieldset);},isPublicKey:function(){return this.type.filter("[value=public]").is(":checked");},isSecretKey:function(){return this.type.filter("[value=secret]").is(":checked");},getFile:function(){var files=this.file.filebox("files");return files&&files.length?files[0]:null;},isOverwrite:function(){return this.overwrite.is(":checked");},show:function(listener){this._super(listener);this.type.filter(":first").prop("checked",true).focus();}});jscape.domain.ExportPgpPublicKeyController=Class.extend({deferred:null,start:function(domainName,keyAlias,isSecretKey){this.domainName=domainName;this.keyAlias=keyAlias;this.secretKey=!!isSecretKey;this.deferred=$.Deferred();this._setupDialog().show(this);return this.deferred.promise();},onSubmit:function(dialog){var filename=dialog.getFilename();return(this.secretKey?jscape.API.exportPgpSecretPublicKey(this.domainName,this.keyAlias,filename):jscape.API.exportPgpPublicKey(this.domainName,this.keyAlias,filename)).done($.proxy(function(){this.deferred.resolve();this.deferred=null;},this));},onCancel:function(dialog){dialog.destroy();this.deferred.reject();this.deferred=null;},_setupDialog:function(){var dialog=new jscape.domain.ExportPgpPublicKeyDialog();dialog.setFilename("pgp-key.pub");return dialog;}});jscape.domain.ExportPgpPublicKeyDialog=jscape.ui.DefaultDialog.extend({initialize:function(){this._super($("#d-pgpkey-exportpublic"),{width:530,resizable:false});this.fieldset=$("fieldset[name=exportpgpkeyfields]",this.dialog);this.filename=$("input[name=filename]",this.fieldset).textbox({required:true,missingMessage:window.R.string.KEY_MANAGER_EXPORT_KEYS_ERROR_BAD_FILENAME,width:"60%"});},getFilename:function(){return this.filename.textbox("getValue");},setFilename:function(value){this.filename.textbox("setValue",value);}});jscape.domain.ExportPgpSecretKeyController=Class.extend({deferred:null,start:function(domainName,keyAlias){this.domainName=domainName;this.keyAlias=keyAlias;this.deferred=$.Deferred();this._setupDialog().show(this);return this.deferred.promise();},onSubmit:function(dialog){return jscape.API.exportPgpSecretKey(this.domainName,this.keyAlias,dialog.getFilename(),dialog.getPassword()).done($.proxy(function(){this.deferred.resolve();this.deferred=null;},this));},onCancel:function(dialog){dialog.destroy();this.deferred.reject();this.deferred=null;},_setupDialog:function(){var dialog=new jscape.domain.ExportPgpSecretKeyDialog();dialog.setFilename("pgp-key.sec");return dialog;}});jscape.domain.ExportPgpSecretKeyDialog=jscape.ui.DefaultDialog.extend({initialize:function(){this._super($("#d-pgpkey-exportsecret"),{width:530,resizable:false});this.fieldset=$("fieldset[name=exportpgpkeyfields]",this.dialog);this.filename=$("input[name=filename]",this.fieldset).textbox({required:true,missingMessage:window.R.string.KEY_MANAGER_EXPORT_KEYS_ERROR_BAD_FILENAME,width:"60%"});this.password=$("input[name=filepwd]",this.fieldset).passwordbox({required:true,lastDelay:0,missingMessage:window.R.string.KEY_MANAGER_EXPORT_KEYS_ERROR_BAD_FILE_PASSWORD,width:"50%"});},getFilename:function(){return this.filename.textbox("getValue");},setFilename:function(value){this.filename.textbox("setValue",value);},getPassword:function(){return this.password.passwordbox("getValue");},show:function(listener){this._super(listener);this.filename.textbox("textbox").focus();}});jscape.domain.GeneratePgpKeyController=Class.extend({UNSUPPORTED_CURVES:["448"],deferred:null,initialize:function(allowed){this.allowed=!!allowed;},start:function(domainName){this.deferred=$.Deferred();if(!this.allowed){this.deferred.reject();}else{this.domainName=domainName;this._setupDialog().show(this);}
return this.deferred.promise();},onSubmit:function(dialog){return jscape.API.generatePgpKey(this.domainName,dialog.getRealName(),dialog.getEmail(),dialog.getAlgorithm(),dialog.getKeyLength(),dialog.getKeyCurve(),dialog.getPeriod()).done($.proxy(function(key){this.deferred.resolve(key);this.deferred=null;},this));},onCancel:function(dialog){dialog.destroy();this.deferred.reject();this.deferred=null;},onLoadKeyCurves:function(params){var values=jscape.KeyPairAlgorithm.curvesOf(params.keyType);if(jscape.KeyPairAlgorithm.ED.name==params.keyType){values=$.grep(values,$.proxy(function(val){return $.inArray(val,this.UNSUPPORTED_CURVES)==-1;},this));}
return $.Deferred().resolve(values).promise();},onLoadKeyLengths:function(params){var values=jscape.KeyPairAlgorithm.lengthsOf(params.keyType);return $.Deferred().resolve(values).promise();},_setupDialog:function(){var dialog=new jscape.domain.GeneratePgpKeyDialog();dialog.setAlgorithm("RSA");dialog.setKeyLength(2048);dialog.setPeriod(365);return dialog;}});jscape.domain.GeneratePgpKeyDialog=jscape.ui.DefaultDialog.extend({initialize:function(){this._super($("#d-pgpkey-generate"),{width:"50%"});var initializing=true;this.fieldset=$("fieldset[name=generatepgpkeyfields]",this.dialog);this.realName=$("input[name=realname]",this.fieldset).textbox({required:true,validType:["pgp_nonempty_name"],missingMessage:window.R.string.KEY_MANAGER_PGP_KEYS_ERROR_BAD_NAME,width:"60%"});this.realName.textbox("textbox").on("input",$.proxy(function(){this.email.textbox("validate");},this));this.email=$("input[name=email]",this.fieldset).textbox({validType:["email"],width:"60%"});this.email.textbox("textbox").on("input",$.proxy(function(){this.realName.textbox("validate");},this));this.keyAlgorithm=$("select[name=keytype]",this.fieldset).combobox({required:true,editable:false,onChange:$.proxy(this._onChange$KeyType,this),width:"25%",panelHeight:"auto",panelMaxHeight:"40%"});this.keyLength=$("select[name=keylength]",this.fieldset).combobox({editable:false,disabled:true,limitToList:true,onBeforeLoad:function(){return!initializing;},loader:$.proxy(this._onLoad$KeyLengths,this),loadFilter:function(data){return $.map(data,function(entry){return $.isPlainObject(entry)?$.extend(entry,{value:parseInt(entry.value)}):{text:String(entry),value:parseInt(entry)};});},width:"25%",panelHeight:"auto",panelMaxHeight:"40%"});this.keyCurve=$("select[name=keycurve]",this.fieldset).combobox({required:true,editable:true,disabled:true,limitToList:true,onBeforeLoad:function(){return!initializing;},loader:$.proxy(this._onLoad$KeyCurves,this),width:"25%",panelHeight:"auto",panelMaxHeight:"40%"});this.period=$("input[name=period]",this.fieldset).numberspinner({min:1,max:10000,increment:10,width:"25%"});initializing=false;},getRealName:function(){return this.realName.textbox("getValue");},getEmail:function(){return this.email.textbox("getValue");},getAlgorithm:function(){return this.keyAlgorithm.combobox("getValue");},setAlgorithm:function(value){this.keyAlgorithm.combobox("select",value);},getKeyLength:function(){var value=this.keyLength.combobox("getValue");return parseInt(value)||value;},setKeyLength:function(value){this.keyLength.combobox("select",value);},getKeyCurve:function(){return this.keyCurve.combobox("getValue");},getPeriod:function(){return parseInt(this.period.numberspinner("getValue"))||null;},setPeriod:function(value){value=parseInt(value);if(!isNaN(value)){this.period.numberspinner("setValue",value);}},show:function(listener){this._super(listener);this.realName.textbox("textbox").focus();this._onChange$KeyType();},_onLoad$KeyLengths:function(params,success,error){var keyLength=this.getKeyLength();this.listener.onLoadKeyLengths(params).then($.proxy(function(data){if(data&&data.length){this.keyLength.combobox("enable").combobox("reset").closest("div").show();this.keyCurve.combobox("disable").closest("div").hide();}else{this.keyLength.combobox("disable").closest("div").hide();}
this.dialog.dialog("resize",{height:"auto"});return data;},this)).then(success,error).then($.proxy(function(){this.keyLength.combobox("select",keyLength);},this));},_onLoad$KeyCurves:function(params,success,error){this.listener.onLoadKeyCurves(params).then($.proxy(function(data){if(data&&data.length){this.keyCurve.combobox("enable").combobox("reset").closest("div").show();this.keyLength.combobox("disable").closest("div").hide();}else{this.keyCurve.combobox("disable").closest("div").hide();}
this.dialog.dialog("resize",{height:"auto"});return data;},this)).then(success,error);},_onChange$KeyType:function(){this.keyCurve.combobox("reload",{keyType:this.getAlgorithm()});this.keyLength.combobox("reload",{keyType:this.getAlgorithm()});}});jscape.domain.ViewPgpKeySignaturesController=Class.extend({deferred:null,start:function(domainName,keyAlias,isSecretKey){this.domainName=domainName;this.deferred=$.Deferred();(!!isSecretKey?jscape.API.getPgpSecretKeySignatures(this.domainName,keyAlias):jscape.API.getPgpPublicKeySignatures(this.domainName,keyAlias)).done($.proxy(function(signatures){this._setupDialog(signatures).show(this);},this)).fail($.proxy(function(){this.deferred.reject();this.deferred=null;},this));return this.deferred.promise();},onCancel:function(dialog){dialog.destroy();this.deferred.reject();this.deferred=null;},_setupDialog:function(signatures){var dialog=new jscape.domain.PgpKeySignaturesDialog();dialog.setSignatures(signatures);return dialog;}});jscape.domain.PgpKeySignaturesDialog=jscape.ui.DefaultDialog.extend({initialize:function(){this.dateFormat=new jscape.DateFormat("{MM}-{dd}-{yy}");this._super($("#d-pgpkey-signatures"),{width:530,resizable:false,buttons:[{text:window.R.string.DIALOG_BUTTON_OK||"OK",handler:$.proxy(this._onCancel,this)}]});this.fieldset=$("fieldset[name=pgpkeysignaturesfields]",this.dialog);this.template=$("fieldset[name=pgpkeysignatureentryfields]",this.dialog);},setSignatures:function(values){for(var i=0,size=values.length;i<size;i++){var signature=values[i];this.template.find("code[aria-label=number]").text(i+1);this.template.find("code[aria-label=signingkey]").text(signature.signingKey);this.template.find("code[aria-label=creationtime]").text(this.dateFormat.format(new Date(signature.creationTime)));this.template.find("code[aria-label=type]").text(window.R.string["KEY_MANAGER_PGP_KEYS_SIGNATURE_TYPE_"+signature.type]);this.template.find("code[aria-label=version]").text(signature.version);if(i<size-1){this.template=this.template.clone().appendTo(this.fieldset);}}}});jscape.domain.SignPgpKeyController=Class.extend({deferred:null,initialize:function(allowed){this.allowed=!!allowed;},start:function(domainName,keyAlias,signingKeys){this.deferred=$.Deferred();if(!this.allowed){this.deferred.reject();}else{this.domainName=domainName;this.keyAlias=keyAlias;this._setupDialog(signingKeys).show(this);}
return this.deferred.promise();},onSubmit:function(dialog){return jscape.API.signPgpPublicKey(this.domainName,this.keyAlias,dialog.getSigningKey()).done($.proxy(function(key){this.deferred.resolve(key);this.deferred=null;},this));},onCancel:function(dialog){dialog.destroy();this.deferred.reject();this.deferred=null;},_setupDialog:function(signingKeys){var dialog=new jscape.domain.SignPgpKeyDialog();dialog.setSigningKeys(signingKeys);return dialog;}});jscape.domain.SignPgpKeyDialog=jscape.ui.DefaultDialog.extend({initialize:function(){this._super($("#d-pgpkey-sign"),{width:530});this.fieldset=$("fieldset[name=signpgpkeyfields]",this.dialog);this.signingKey=$("select[name=signingkey]",this.fieldset).combobox({required:true,editable:false,width:180,panelHeight:"auto"});},getSigningKey:function(){return this.signingKey.combobox("getValue");},setSigningKeys:function(values){var data=$.map(values||[],function(key){return{text:key.name,value:key.name};});this.signingKey.combobox("loadData",data);},show:function(listener){this._super(listener);this.signingKey.focus();}});jscape.domain.DeletePgpKeyController=Class.extend({deferred:null,initialize:function(allowed){this.allowed=!!allowed;},start:function(domainName,keyAlias,isSecretKey){this.deferred=$.Deferred();if(!this.allowed){this.deferred.reject();}else{this._confirmDelete(keyAlias).then(function(){return $.when.call(jQuery,!!isSecretKey?jscape.API.deletePgpSecretKey(domainName,keyAlias):jscape.API.deletePgpPublicKey(domainName,keyAlias));}).done($.proxy(function(){this.deferred.resolve();this.deferred=null;},this)).fail($.proxy(function(){this.deferred.reject();this.deferred=null;},this));}
return this.deferred.promise();},_confirmDelete:function(alias){return jscape.ConfirmDialog.confirm(window.R.string.KEY_MANAGER_PGP_KEYS_CONFIRM_DELETE_TITLE,window.R.string.KEY_MANAGER_PGP_KEYS_CONFIRM_DELETE_MESSAGE.supplant({0:alias}));}});